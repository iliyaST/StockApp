{
  "version": 3,
  "sources": ["../../@base-ui-components/react/esm/number-field/index.parts.js", "../../@base-ui-components/react/esm/number-field/root/NumberFieldRoot.js", "../../@base-ui-components/react/esm/number-field/root/NumberFieldRootContext.js", "../../@base-ui-components/react/esm/field/root/FieldRootContext.js", "../../@base-ui-components/react/esm/field/control/FieldControlDataAttributes.js", "../../@base-ui-components/react/esm/field/utils/constants.js", "../../@base-ui-components/react/esm/number-field/utils/styleHooks.js", "../../@base-ui-components/react/esm/utils/useRenderElement.js", "../../@base-ui-components/react/esm/utils/getStyleHookProps.js", "../../@base-ui-components/react/esm/utils/useLazyRef.js", "../../@base-ui-components/react/esm/utils/useForkRef.js", "../../@base-ui-components/react/esm/utils/resolveClassName.js", "../../@base-ui-components/react/esm/utils/reactVersion.js", "../../@base-ui-components/react/esm/utils/mergeObjects.js", "../../@base-ui-components/react/esm/merge-props/mergeProps.js", "../../@base-ui-components/react/esm/utils/useControlled.js", "../../@base-ui-components/react/esm/utils/useEventCallback.js", "../../@base-ui-components/react/esm/utils/useOnMount.js", "../../@base-ui-components/react/esm/utils/useTimeout.js", "../../@base-ui-components/react/esm/utils/useInterval.js", "../../@base-ui-components/react/esm/utils/formatNumber.js", "../../@base-ui-components/react/esm/number-field/utils/parse.js", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@floating-ui/react/dist/floating-ui.react.utils.mjs", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../tabbable/src/index.js", "../../@base-ui-components/react/esm/utils/useLatestRef.js", "../../@base-ui-components/react/esm/utils/useForcedRerendering.js", "../../@base-ui-components/react/esm/utils/useId.js", "../../@base-ui-components/react/esm/utils/useBaseUiId.js", "../../@base-ui-components/react/esm/utils/detectBrowser.js", "../../@base-ui-components/react/esm/number-field/utils/constants.js", "../../@base-ui-components/react/esm/utils/clamp.js", "../../@base-ui-components/react/esm/number-field/utils/validate.js", "../../@base-ui-components/react/esm/number-field/group/NumberFieldGroup.js", "../../@base-ui-components/react/esm/number-field/increment/NumberFieldIncrement.js", "../../@base-ui-components/react/esm/use-button/useButton.js", "../../@base-ui-components/react/esm/utils/useRootElementName.js", "../../@base-ui-components/react/esm/utils/warn.js", "../../@base-ui-components/react/esm/composite/root/CompositeRootContext.js", "../../@base-ui-components/react/esm/number-field/root/useNumberFieldButton.js", "../../@base-ui-components/react/esm/number-field/decrement/NumberFieldDecrement.js", "../../@base-ui-components/react/esm/number-field/input/NumberFieldInput.js", "../../@base-ui-components/react/esm/field/control/useFieldControlValidation.js", "../../@base-ui-components/react/esm/form/FormContext.js", "../../@base-ui-components/react/esm/utils/noop.js", "../../@base-ui-components/react/esm/field/utils/getCombinedFieldValidityData.js", "../../@base-ui-components/react/esm/field/useField.js", "../../@base-ui-components/react/esm/number-field/scrub-area/NumberFieldScrubArea.js", "../../@base-ui-components/react/esm/number-field/scrub-area/NumberFieldScrubAreaContext.js", "../../@base-ui-components/react/esm/number-field/utils/getViewportRect.js", "../../@base-ui-components/react/esm/number-field/utils/subscribeToVisualViewportResize.js", "../../@base-ui-components/react/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.js"],
  "sourcesContent": ["export { NumberFieldRoot as Root } from \"./root/NumberFieldRoot.js\";\nexport { NumberFieldGroup as Group } from \"./group/NumberFieldGroup.js\";\nexport { NumberFieldIncrement as Increment } from \"./increment/NumberFieldIncrement.js\";\nexport { NumberFieldDecrement as Decrement } from \"./decrement/NumberFieldDecrement.js\";\nexport { NumberFieldInput as Input } from \"./input/NumberFieldInput.js\";\nexport { NumberFieldScrubArea as ScrubArea } from \"./scrub-area/NumberFieldScrubArea.js\";\nexport { NumberFieldScrubAreaCursor as ScrubAreaCursor } from \"./scrub-area-cursor/NumberFieldScrubAreaCursor.js\";", "'use client';\n\nimport * as React from 'react';\nimport { NumberFieldRootContext } from \"./NumberFieldRootContext.js\";\nimport { useFieldRootContext } from \"../../field/root/FieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useControlled } from \"../../utils/useControlled.js\";\nimport { useEventCallback } from \"../../utils/useEventCallback.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { useInterval } from \"../../utils/useInterval.js\";\nimport { getNumberLocaleDetails, PERCENTAGES } from \"../utils/parse.js\";\nimport { formatNumber } from \"../../utils/formatNumber.js\";\nimport { useModernLayoutEffect } from \"../../utils/useModernLayoutEffect.js\";\nimport { useLatestRef } from \"../../utils/useLatestRef.js\";\nimport { useForcedRerendering } from \"../../utils/useForcedRerendering.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\nimport { ownerDocument, ownerWindow } from \"../../utils/owner.js\";\nimport { isIOS } from \"../../utils/detectBrowser.js\";\nimport { CHANGE_VALUE_TICK_DELAY, DEFAULT_STEP, START_AUTO_CHANGE_DELAY } from \"../utils/constants.js\";\nimport { toValidatedNumber } from \"../utils/validate.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Groups all parts of the number field and manages its state.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldRoot = /*#__PURE__*/React.forwardRef(function NumberFieldRoot(componentProps, forwardedRef) {\n  const {\n    id: idProp,\n    min,\n    max,\n    smallStep = 0.1,\n    step = 1,\n    largeStep = 10,\n    required = false,\n    disabled: disabledProp = false,\n    readOnly = false,\n    name: nameProp,\n    defaultValue,\n    value: valueProp,\n    onValueChange: onValueChangeProp,\n    allowWheelScrub = false,\n    snapOnStep = false,\n    format,\n    locale,\n    render,\n    className,\n    inputRef: inputRefProp,\n    ...elementProps\n  } = componentProps;\n  const {\n    setControlId,\n    setDirty,\n    validityData,\n    setValidityData,\n    disabled: fieldDisabled,\n    setFilled,\n    invalid,\n    name: fieldName,\n    state: fieldState\n  } = useFieldRootContext();\n  const disabled = fieldDisabled || disabledProp;\n  const name = fieldName ?? nameProp;\n  const [isScrubbing, setIsScrubbing] = React.useState(false);\n  const minWithDefault = min ?? Number.MIN_SAFE_INTEGER;\n  const maxWithDefault = max ?? Number.MAX_SAFE_INTEGER;\n  const minWithZeroDefault = min ?? 0;\n  const formatStyle = format?.style;\n  const inputRef = React.useRef(null);\n  const id = useBaseUiId(idProp);\n  useModernLayoutEffect(() => {\n    setControlId(id);\n    return () => {\n      setControlId(undefined);\n    };\n  }, [id, setControlId]);\n  const [valueUnwrapped, setValueUnwrapped] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'NumberField',\n    state: 'value'\n  });\n  const value = valueUnwrapped ?? null;\n  const valueRef = useLatestRef(value);\n  useModernLayoutEffect(() => {\n    setFilled(value !== null);\n  }, [setFilled, value]);\n  const forceRender = useForcedRerendering();\n  const formatOptionsRef = useLatestRef(format);\n  const onValueChange = useEventCallback(onValueChangeProp);\n  const startTickTimeout = useTimeout();\n  const tickInterval = useInterval();\n  const intentionalTouchCheckTimeout = useTimeout();\n  const isPressedRef = React.useRef(false);\n  const movesAfterTouchRef = React.useRef(0);\n  const allowInputSyncRef = React.useRef(true);\n  const unsubscribeFromGlobalContextMenuRef = React.useRef(() => {});\n  useModernLayoutEffect(() => {\n    if (validityData.initialValue === null && value !== validityData.initialValue) {\n      setValidityData(prev => ({\n        ...prev,\n        initialValue: value\n      }));\n    }\n  }, [setValidityData, validityData.initialValue, value]);\n\n  // During SSR, the value is formatted on the server, whose locale may differ from the client's\n  // locale. This causes a hydration mismatch, which we manually suppress. This is preferable to\n  // rendering an empty input field and then updating it with the formatted value, as the user\n  // can still see the value prior to hydration, even if it's not formatted correctly.\n  const [inputValue, setInputValue] = React.useState(() => formatNumber(value, locale, format));\n  const [inputMode, setInputMode] = React.useState('numeric');\n  const getAllowedNonNumericKeys = useEventCallback(() => {\n    const {\n      decimal,\n      group,\n      currency\n    } = getNumberLocaleDetails(locale, format);\n    const keys = new Set(['.', ',', decimal, group]);\n    if (formatStyle === 'percent') {\n      PERCENTAGES.forEach(key => keys.add(key));\n    }\n    if (formatStyle === 'currency' && currency) {\n      keys.add(currency);\n    }\n    if (minWithDefault < 0) {\n      keys.add('-');\n    }\n    return keys;\n  });\n  const getStepAmount = useEventCallback(event => {\n    if (event?.altKey) {\n      return smallStep;\n    }\n    if (event?.shiftKey) {\n      return largeStep;\n    }\n    return step;\n  });\n  const setValue = useEventCallback((unvalidatedValue, event, dir) => {\n    const eventWithOptionalKeyState = event;\n    const validatedValue = toValidatedNumber(unvalidatedValue, {\n      step: dir ? getStepAmount(eventWithOptionalKeyState) * dir : undefined,\n      format: formatOptionsRef.current,\n      minWithDefault,\n      maxWithDefault,\n      minWithZeroDefault,\n      snapOnStep,\n      small: eventWithOptionalKeyState?.altKey ?? false\n    });\n    onValueChange?.(validatedValue, event && 'nativeEvent' in event ? event.nativeEvent : event);\n    setValueUnwrapped(validatedValue);\n    setDirty(validatedValue !== validityData.initialValue);\n\n    // We need to force a re-render, because while the value may be unchanged, the formatting may\n    // be different. This forces the `useModernLayoutEffect` to run which acts as a single source of\n    // truth to sync the input value.\n    forceRender();\n  });\n  const incrementValue = useEventCallback((amount, dir, currentValue, event) => {\n    const prevValue = currentValue == null ? valueRef.current : currentValue;\n    const nextValue = typeof prevValue === 'number' ? prevValue + amount * dir : Math.max(0, min ?? 0);\n    setValue(nextValue, event, dir);\n  });\n  const stopAutoChange = useEventCallback(() => {\n    intentionalTouchCheckTimeout.clear();\n    startTickTimeout.clear();\n    tickInterval.clear();\n    unsubscribeFromGlobalContextMenuRef.current();\n    movesAfterTouchRef.current = 0;\n  });\n  const startAutoChange = useEventCallback((isIncrement, triggerEvent) => {\n    stopAutoChange();\n    if (!inputRef.current) {\n      return;\n    }\n    const win = ownerWindow(inputRef.current);\n    function handleContextMenu(event) {\n      event.preventDefault();\n    }\n\n    // A global context menu is necessary to prevent the context menu from appearing when the touch\n    // is slightly outside of the element's hit area.\n    win.addEventListener('contextmenu', handleContextMenu);\n    unsubscribeFromGlobalContextMenuRef.current = () => {\n      win.removeEventListener('contextmenu', handleContextMenu);\n    };\n    win.addEventListener('pointerup', () => {\n      isPressedRef.current = false;\n      stopAutoChange();\n    }, {\n      once: true\n    });\n    function tick() {\n      const amount = getStepAmount(triggerEvent) ?? DEFAULT_STEP;\n      incrementValue(amount, isIncrement ? 1 : -1, undefined, triggerEvent);\n    }\n    tick();\n    startTickTimeout.start(START_AUTO_CHANGE_DELAY, () => {\n      tickInterval.start(CHANGE_VALUE_TICK_DELAY, tick);\n    });\n  });\n\n  // We need to update the input value when the external `value` prop changes. This ends up acting\n  // as a single source of truth to update the input value, bypassing the need to manually set it in\n  // each event handler internally in this hook.\n  // This is done inside a layout effect as an alternative to the technique to set state during\n  // render as we're accessing a ref, which must be inside an effect.\n  // https://react.dev/learn/you-might-not-need-an-effect#adjusting-some-state-when-a-prop-changes\n  //\n  // ESLint is disabled because it needs to run even if the parsed value hasn't changed, since the\n  // value still can be formatted differently.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useModernLayoutEffect(function syncFormattedInputValueOnValueChange() {\n    // This ensures the value is only updated on blur rather than every keystroke, but still\n    // allows the input value to be updated when the value is changed externally.\n    if (!allowInputSyncRef.current) {\n      return;\n    }\n    const nextInputValue = formatNumber(value, locale, formatOptionsRef.current);\n    if (nextInputValue !== inputValue) {\n      setInputValue(nextInputValue);\n    }\n  });\n  useModernLayoutEffect(function setDynamicInputModeForIOS() {\n    if (!isIOS) {\n      return;\n    }\n\n    // iOS numeric software keyboard doesn't have a minus key, so we need to use the default\n    // keyboard to let the user input a negative number.\n    let computedInputMode = 'text';\n    if (minWithDefault >= 0) {\n      // iOS numeric software keyboard doesn't have a decimal key for \"numeric\" input mode, but\n      // this is better than the \"text\" input if possible to use.\n      computedInputMode = 'decimal';\n    }\n    setInputMode(computedInputMode);\n  }, [minWithDefault, formatStyle]);\n  React.useEffect(() => {\n    return () => stopAutoChange();\n  }, [stopAutoChange]);\n\n  // The `onWheel` prop can't be prevented, so we need to use a global event listener.\n  React.useEffect(function registerElementWheelListener() {\n    const element = inputRef.current;\n    if (disabled || readOnly || !allowWheelScrub || !element) {\n      return undefined;\n    }\n    function handleWheel(event) {\n      if (\n      // Allow pinch-zooming.\n      event.ctrlKey || ownerDocument(inputRef.current).activeElement !== inputRef.current) {\n        return;\n      }\n\n      // Prevent the default behavior to avoid scrolling the page.\n      event.preventDefault();\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n      incrementValue(amount, event.deltaY > 0 ? -1 : 1, undefined, event);\n    }\n    element.addEventListener('wheel', handleWheel);\n    return () => {\n      element.removeEventListener('wheel', handleWheel);\n    };\n  }, [allowWheelScrub, incrementValue, disabled, readOnly, largeStep, step, getStepAmount]);\n  const state = React.useMemo(() => ({\n    ...fieldState,\n    disabled,\n    readOnly,\n    required,\n    value,\n    inputValue,\n    scrubbing: isScrubbing\n  }), [fieldState, disabled, readOnly, required, value, inputValue, isScrubbing]);\n  const contextValue = React.useMemo(() => ({\n    inputRef,\n    inputValue,\n    value,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    incrementValue,\n    getStepAmount,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    name,\n    required,\n    invalid,\n    inputMode,\n    getAllowedNonNumericKeys,\n    min,\n    max,\n    setInputValue,\n    locale,\n    isScrubbing,\n    setIsScrubbing,\n    state\n  }), [inputRef, inputValue, value, startAutoChange, stopAutoChange, minWithDefault, maxWithDefault, disabled, readOnly, id, setValue, incrementValue, getStepAmount, allowInputSyncRef, formatOptionsRef, valueRef, isPressedRef, intentionalTouchCheckTimeout, movesAfterTouchRef, name, required, invalid, inputMode, getAllowedNonNumericKeys, min, max, setInputValue, locale, isScrubbing, state]);\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: elementProps,\n    customStyleHookMapping: styleHookMapping\n  });\n  return /*#__PURE__*/_jsxs(NumberFieldRootContext.Provider, {\n    value: contextValue,\n    children: [element, name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      ref: inputRefProp,\n      value: value ?? '',\n      disabled: disabled,\n      required: required\n    })]\n  });\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldRoot.displayName = \"NumberFieldRoot\";", "'use client';\n\nimport * as React from 'react';\nexport const NumberFieldRootContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") NumberFieldRootContext.displayName = \"NumberFieldRootContext\";\nexport function useNumberFieldRootContext() {\n  const context = React.useContext(NumberFieldRootContext);\n  if (context === undefined) {\n    throw new Error('Base UI: NumberFieldRootContext is missing. NumberField parts must be placed within <NumberField.Root>.');\n  }\n  return context;\n}", "'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_VALIDITY_STATE } from \"../utils/constants.js\";\nconst NOOP = () => {};\nexport const FieldRootContext = /*#__PURE__*/React.createContext({\n  invalid: undefined,\n  controlId: undefined,\n  setControlId: NOOP,\n  labelId: undefined,\n  setLabelId: NOOP,\n  messageIds: [],\n  setMessageIds: NOOP,\n  name: undefined,\n  validityData: {\n    state: DEFAULT_VALIDITY_STATE,\n    errors: [],\n    error: '',\n    value: '',\n    initialValue: null\n  },\n  setValidityData: NOOP,\n  disabled: undefined,\n  touched: false,\n  setTouched: NOOP,\n  dirty: false,\n  setDirty: NOOP,\n  filled: false,\n  setFilled: NOOP,\n  focused: false,\n  setFocused: NOOP,\n  validate: () => null,\n  validationMode: 'onBlur',\n  validationDebounceTime: 0,\n  state: {\n    disabled: false,\n    valid: null,\n    touched: false,\n    dirty: false,\n    filled: false,\n    focused: false\n  },\n  markedDirtyRef: {\n    current: false\n  }\n});\nif (process.env.NODE_ENV !== \"production\") FieldRootContext.displayName = \"FieldRootContext\";\nexport function useFieldRootContext(optional = true) {\n  const context = React.useContext(FieldRootContext);\n  if (context.setControlId === NOOP && !optional) {\n    throw new Error('Base UI: FieldRootContext is missing. Field parts must be placed within <Field.Root>.');\n  }\n  return context;\n}", "export let FieldControlDataAttributes = /*#__PURE__*/function (FieldControlDataAttributes) {\n  /**\n   * Present when the field is disabled.\n   */\n  FieldControlDataAttributes[\"disabled\"] = \"data-disabled\";\n  /**\n   * Present when the field is in valid state.\n   */\n  FieldControlDataAttributes[\"valid\"] = \"data-valid\";\n  /**\n   * Present when the field is in invalid state.\n   */\n  FieldControlDataAttributes[\"invalid\"] = \"data-invalid\";\n  /**\n   * Present when the field has been touched.\n   */\n  FieldControlDataAttributes[\"touched\"] = \"data-touched\";\n  /**\n   * Present when the field's value has changed.\n   */\n  FieldControlDataAttributes[\"dirty\"] = \"data-dirty\";\n  /**\n   * Present when the field is filled.\n   */\n  FieldControlDataAttributes[\"filled\"] = \"data-filled\";\n  /**\n   * Present when the field control is focused.\n   */\n  FieldControlDataAttributes[\"focused\"] = \"data-focused\";\n  return FieldControlDataAttributes;\n}({});", "import { FieldControlDataAttributes } from \"../control/FieldControlDataAttributes.js\";\nexport const DEFAULT_VALIDITY_STATE = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valid: null,\n  valueMissing: false\n};\nexport const fieldValidityMapping = {\n  valid(value) {\n    if (value === null) {\n      return null;\n    }\n    if (value) {\n      return {\n        [FieldControlDataAttributes.valid]: ''\n      };\n    }\n    return {\n      [FieldControlDataAttributes.invalid]: ''\n    };\n  }\n};", "export const styleHookMapping = {\n  inputValue: () => null,\n  value: () => null\n};", "import * as React from 'react';\nimport { getStyleHookProps } from \"./getStyleHookProps.js\";\nimport { useForkRef, useForkRefN } from \"./useForkRef.js\";\nimport { resolveClassName } from \"./resolveClassName.js\";\nimport { isReactVersionAtLeast } from \"./reactVersion.js\";\nimport { mergeProps, mergePropsN } from \"../merge-props/index.js\";\nimport { mergeObjects } from \"./mergeObjects.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_OBJECT = {};\nconst IDENTITY = x => x;\n\n/**\n * Render a Base UI element.\n */\nexport function useRenderElement(element, componentProps, params = {}) {\n  const renderProp = componentProps.render;\n  const outProps = useRenderElementProps(componentProps, params);\n  if (params.enabled === false) {\n    return null;\n  }\n  const state = params.state ?? EMPTY_OBJECT;\n  return evaluateRenderProp(element, renderProp, outProps, state);\n}\n\n/**\n * Returns a function that renders a Base UI element.\n *\n * @deprecated Use `useRenderElement` instead and pass `enabled = false` to its options instead.\n */\n// TODO: Remove once useComponentRenderer is no longer used.\nexport function useRenderElementLazy(element, componentProps, params = {}) {\n  const renderProp = componentProps.render;\n  const outProps = useRenderElementProps(componentProps, params);\n  const state = params.state ?? EMPTY_OBJECT;\n  return () => evaluateRenderProp(element, renderProp, outProps, state);\n}\n\n/**\n * Computes render element final props.\n */\nfunction useRenderElementProps(componentProps, params = {}) {\n  const {\n    className: classNameProp,\n    render: renderProp\n  } = componentProps;\n  const {\n    propGetter = IDENTITY,\n    state = EMPTY_OBJECT,\n    ref,\n    props,\n    disableStyleHooks,\n    customStyleHookMapping,\n    enabled = true\n  } = params;\n  const className = enabled ? resolveClassName(classNameProp, state) : undefined;\n  let styleHooks;\n  if (disableStyleHooks !== true) {\n    // SAFETY: We use typings to ensure `disableStyleHooks` is either always set or\n    // always unset, so this `if` block is stable across renders.\n    /* eslint-disable-next-line react-hooks/rules-of-hooks */\n    styleHooks = React.useMemo(() => enabled ? getStyleHookProps(state, customStyleHookMapping) : EMPTY_OBJECT, [state, customStyleHookMapping, enabled]);\n  }\n  const outProps = enabled ? propGetter(mergeObjects(styleHooks, Array.isArray(props) ? mergePropsN(props) : props) ?? EMPTY_OBJECT) : EMPTY_OBJECT;\n\n  // SAFETY: The `useForkRef` functions use a single hook to store the same value,\n  // switching between them at runtime is safe. If this assertion fails, React will\n  // throw at runtime anyway.\n  /* eslint-disable react-hooks/rules-of-hooks */\n  if (!enabled) {\n    useForkRef(null, null);\n  } else if (Array.isArray(ref)) {\n    outProps.ref = useForkRefN(outProps.ref, getChildRef(renderProp), ...ref);\n  } else {\n    outProps.ref = useForkRef(outProps.ref, getChildRef(renderProp), ref);\n  }\n  /* eslint-enable react-hooks/rules-of-hooks */\n\n  if (!enabled) {\n    return EMPTY_OBJECT;\n  }\n  if (className !== undefined) {\n    outProps.className = className;\n  }\n  return outProps;\n}\nfunction evaluateRenderProp(element, render, props, state) {\n  if (render) {\n    if (typeof render === 'function') {\n      return render(props, state);\n    }\n    const mergedProps = mergeProps(props, render.props);\n    mergedProps.ref = props.ref;\n    return /*#__PURE__*/React.cloneElement(render, mergedProps);\n  }\n  if (element) {\n    if (typeof element === 'string') {\n      return renderTag(element, props);\n    }\n  }\n  // Unreachable, but the typings on `useRenderElement` need to be reworked\n  // to annotate it correctly.\n  throw new Error('Need either element or render to be defined');\n}\nfunction renderTag(Tag, props) {\n  if (Tag === 'button') {\n    return /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      ...props\n    });\n  }\n  if (Tag === 'img') {\n    return /*#__PURE__*/_jsx(\"img\", {\n      alt: \"\",\n      ...props\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tag, props);\n}\nfunction getChildRef(render) {\n  if (render && typeof render !== 'function') {\n    return isReactVersionAtLeast(19) ? render.props.ref : render.ref;\n  }\n  return null;\n}", "export function getStyleHookProps(state, customMapping) {\n  const props = {};\n\n  /* eslint-disable-next-line guard-for-in */\n  for (const key in state) {\n    const value = state[key];\n    if (customMapping?.hasOwnProperty(key)) {\n      const customProps = customMapping[key](value);\n      if (customProps != null) {\n        Object.assign(props, customProps);\n      }\n      continue;\n    }\n    if (value === true) {\n      props[`data-${key.toLowerCase()}`] = '';\n    } else if (value) {\n      props[`data-${key.toLowerCase()}`] = value.toString();\n    }\n  }\n  return props;\n}", "'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\n\nexport function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}", "import { useLazyRef } from \"./useLazyRef.js\";\n\n/**\n * Merges refs into a single memoized callback ref or `null`.\n */\n\nexport function useForkRef(a, b, c, d) {\n  const forkRef = useLazyRef(createForkRef).current;\n  if (didChange(forkRef, a, b, c, d)) {\n    update(forkRef, [a, b, c, d]);\n  }\n  return forkRef.callback;\n}\n\n/**\n * Merges variadic amount of refs into a single memoized callback ref or `null`.\n */\nexport function useForkRefN(...refs) {\n  const forkRef = useLazyRef(createForkRef).current;\n  if (didChangeN(forkRef, refs)) {\n    update(forkRef, refs);\n  }\n  return forkRef.callback;\n}\nfunction createForkRef() {\n  return {\n    callback: null,\n    cleanup: null,\n    refs: []\n  };\n}\nfunction didChange(forkRef, a, b, c, d) {\n  // prettier-ignore\n  return forkRef.refs[0] !== a || forkRef.refs[1] !== b || forkRef.refs[2] !== c || forkRef.refs[3] !== d;\n}\nfunction didChangeN(forkRef, newRefs) {\n  return forkRef.refs.length !== newRefs.length || forkRef.refs.some((ref, index) => ref !== newRefs[index]);\n}\nfunction update(forkRef, refs) {\n  forkRef.refs = refs;\n  if (refs.every(ref => ref == null)) {\n    forkRef.callback = null;\n    return;\n  }\n  forkRef.callback = instance => {\n    if (forkRef.cleanup) {\n      forkRef.cleanup();\n      forkRef.cleanup = null;\n    }\n    if (instance != null) {\n      const cleanupCallbacks = Array(refs.length).fill(null);\n      for (let i = 0; i < refs.length; i += 1) {\n        const ref = refs[i];\n        if (ref == null) {\n          continue;\n        }\n        switch (typeof ref) {\n          case 'function':\n            {\n              const refCleanup = ref(instance);\n              if (typeof refCleanup === 'function') {\n                cleanupCallbacks[i] = refCleanup;\n              }\n              break;\n            }\n          case 'object':\n            {\n              ref.current = instance;\n              break;\n            }\n          default:\n        }\n      }\n      forkRef.cleanup = () => {\n        for (let i = 0; i < refs.length; i += 1) {\n          const ref = refs[i];\n          if (ref == null) {\n            continue;\n          }\n          switch (typeof ref) {\n            case 'function':\n              {\n                const cleanupCallback = cleanupCallbacks[i];\n                if (typeof cleanupCallback === 'function') {\n                  cleanupCallback();\n                } else {\n                  ref(null);\n                }\n                break;\n              }\n            case 'object':\n              {\n                ref.current = null;\n                break;\n              }\n            default:\n          }\n        }\n      };\n    }\n  };\n}", "/**\n * If the provided className is a string, it will be returned as is.\n * Otherwise, the function will call the className function with the state as the first argument.\n *\n * @param className\n * @param state\n */\nexport function resolveClassName(className, state) {\n  return typeof className === 'function' ? className(state) : className;\n}", "import * as React from 'react';\nconst majorVersion = parseInt(React.version, 10);\nexport function isReactVersionAtLeast(reactVersionToCheck) {\n  return majorVersion >= reactVersionToCheck;\n}", "export function mergeObjects(a, b) {\n  if (a && !b) {\n    return a;\n  }\n  if (!a && b) {\n    return b;\n  }\n  if (a || b) {\n    return {\n      ...a,\n      ...b\n    };\n  }\n  return undefined;\n}", "import { mergeObjects } from \"../utils/mergeObjects.js\";\nconst EMPTY_PROPS = {};\n\n/**\n * Merges multiple sets of React props. It follows the Object.assign pattern where the rightmost object's fields overwrite\n * the conflicting ones from others. This doesn't apply to event handlers, `className` and `style` props.\n * Event handlers are merged such that they are called in sequence (the rightmost one being called first),\n * and allows the user to prevent the subsequent event handlers from being\n * executed by attaching a `preventBaseUIHandler` method.\n * It also merges the `className` and `style` props, whereby the classes are concatenated\n * and the rightmost styles overwrite the subsequent ones.\n *\n * Props can either be provided as objects or as functions that take the previous props as an argument.\n * The function will receive the merged props up to that point (going from left to right):\n * so in the case of `(obj1, obj2, fn, obj3)`, `fn` will receive the merged props of `obj1` and `obj2`.\n * The function is responsible for chaining event handlers if needed (i.e. we don't run the merge logic).\n *\n * Event handlers returned by the functions are not automatically prevented when `preventBaseUIHandler` is called.\n * They must check `event.baseUIHandlerPrevented` themselves and bail out if it's true.\n *\n * @important **`ref` is not merged.**\n * @param props props to merge.\n * @returns the merged props.\n */\n/* eslint-disable id-denylist */\n\nexport function mergeProps(a, b, c, d, e) {\n  // We need to mutably own `merged`\n  let merged = {\n    ...resolvePropsGetter(a, EMPTY_PROPS)\n  };\n  if (b) {\n    merged = mergeOne(merged, b);\n  }\n  if (c) {\n    merged = mergeOne(merged, c);\n  }\n  if (d) {\n    merged = mergeOne(merged, d);\n  }\n  if (e) {\n    merged = mergeOne(merged, e);\n  }\n  return merged;\n}\n/* eslint-enable id-denylist */\n\nexport function mergePropsN(props) {\n  if (props.length === 0) {\n    return EMPTY_PROPS;\n  }\n  if (props.length === 1) {\n    return resolvePropsGetter(props[0], EMPTY_PROPS);\n  }\n\n  // We need to mutably own `merged`\n  let merged = {\n    ...resolvePropsGetter(props[0], EMPTY_PROPS)\n  };\n  for (let i = 1; i < props.length; i += 1) {\n    merged = mergeOne(merged, props[i]);\n  }\n  return merged;\n}\nfunction mergeOne(merged, inputProps) {\n  if (isPropsGetter(inputProps)) {\n    return inputProps(merged);\n  }\n  return mutablyMergeInto(merged, inputProps);\n}\n\n/**\n * Merges two sets of props. In case of conflicts, the external props take precedence.\n */\nfunction mutablyMergeInto(mergedProps, externalProps) {\n  if (!externalProps) {\n    return mergedProps;\n  }\n\n  // eslint-disable-next-line guard-for-in\n  for (const propName in externalProps) {\n    const externalPropValue = externalProps[propName];\n    switch (propName) {\n      case 'style':\n        {\n          mergedProps[propName] = mergeObjects(mergedProps.style, externalPropValue);\n          break;\n        }\n      case 'className':\n        {\n          mergedProps[propName] = mergeClassNames(mergedProps.className, externalPropValue);\n          break;\n        }\n      default:\n        {\n          if (isEventHandler(propName, externalPropValue)) {\n            mergedProps[propName] = mergeEventHandlers(mergedProps[propName], externalPropValue);\n          } else {\n            mergedProps[propName] = externalPropValue;\n          }\n        }\n    }\n  }\n  return mergedProps;\n}\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const code0 = key.charCodeAt(0);\n  const code1 = key.charCodeAt(1);\n  const code2 = key.charCodeAt(2);\n  return code0 === 111 /* o */ && code1 === 110 /* n */ && code2 >= 65 /* A */ && code2 <= 90 /* Z */ && typeof value === 'function';\n}\nfunction isPropsGetter(inputProps) {\n  return typeof inputProps === 'function';\n}\nfunction resolvePropsGetter(inputProps, previousProps) {\n  if (isPropsGetter(inputProps)) {\n    return inputProps(previousProps);\n  }\n  return inputProps ?? EMPTY_PROPS;\n}\nfunction mergeEventHandlers(ourHandler, theirHandler) {\n  return event => {\n    if (isSyntheticEvent(event)) {\n      const baseUIEvent = event;\n      makeEventPreventable(baseUIEvent);\n      const result = theirHandler(baseUIEvent);\n      if (!baseUIEvent.baseUIHandlerPrevented) {\n        ourHandler?.(baseUIEvent);\n      }\n      return result;\n    }\n    const result = theirHandler(event);\n    ourHandler?.(event);\n    return result;\n  };\n}\nexport function makeEventPreventable(event) {\n  event.preventBaseUIHandler = () => {\n    event.baseUIHandlerPrevented = true;\n  };\n  return event;\n}\nfunction mergeClassNames(ourClassName, theirClassName) {\n  if (theirClassName) {\n    if (ourClassName) {\n      // eslint-disable-next-line prefer-template\n      return theirClassName + ' ' + ourClassName;\n    }\n    return theirClassName;\n  }\n  return ourClassName;\n}\nfunction isSyntheticEvent(event) {\n  return event != null && typeof event === 'object' && 'nativeEvent' in event;\n}", "'use client';\n\n// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`Base UI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      // Object.is() is not equivalent to the === operator.\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.\n      if (!isControlled && !Object.is(defaultValue, defaultProp)) {\n        console.error([`Base UI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}", "'use client';\n\nimport * as React from 'react';\nimport { useLazyRef } from \"./useLazyRef.js\";\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst useInsertionEffect = React[`useInsertionEffect${Math.random().toFixed(1)}`.slice(0, -3)] || (fn => fn());\nexport function useEventCallback(callback) {\n  const stable = useLazyRef(createStableCallback).current;\n  stable.next = callback;\n  useInsertionEffect(stable.effect);\n  return stable.trampoline;\n}\nfunction createStableCallback() {\n  const stable = {\n    next: undefined,\n    callback: assertNotCalled,\n    trampoline: (...args) => stable.callback?.(...args),\n    effect: () => {\n      stable.callback = stable.next;\n    }\n  };\n  return stable;\n}\nfunction assertNotCalled() {\n  throw new Error('Cannot call an event handler while rendering.');\n}", "'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}", "'use client';\n\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nconst EMPTY = 0;\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = (() => EMPTY)();\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = EMPTY;\n      fn();\n    }, delay); /* Node.js types are enabled in development */\n  }\n  isStarted() {\n    return this.currentId !== EMPTY;\n  }\n  clear = () => {\n    if (this.currentId !== EMPTY) {\n      clearTimeout(this.currentId);\n      this.currentId = EMPTY;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\n\n/**\n * A `setTimeout` with automatic cleanup and guard.\n */\nexport function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}", "'use client';\n\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nimport { Timeout } from \"./useTimeout.js\";\nconst EMPTY = 0;\nexport class Interval extends Timeout {\n  static create() {\n    return new Interval();\n  }\n\n  /**\n   * Executes `fn` at `delay` interval, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setInterval(() => {\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== EMPTY) {\n      clearInterval(this.currentId);\n      this.currentId = EMPTY;\n    }\n  };\n}\n\n/**\n * A `setInterval` with automatic cleanup and guard.\n */\nexport function useInterval() {\n  const timeout = useLazyRef(Interval.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}", "export const cache = new Map();\nexport function getFormatter(locale, options) {\n  const optionsString = JSON.stringify({\n    locale,\n    options\n  });\n  const cachedFormatter = cache.get(optionsString);\n  if (cachedFormatter) {\n    return cachedFormatter;\n  }\n  const formatter = new Intl.NumberFormat(locale, options);\n  cache.set(optionsString, formatter);\n  return formatter;\n}\nexport function formatNumber(value, locale, options) {\n  if (value == null) {\n    return '';\n  }\n  return getFormatter(locale, options).format(value);\n}", "import { getFormatter } from \"../../utils/formatNumber.js\";\nexport const HAN_NUMERALS = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\nexport const ARABIC_NUMERALS = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\nexport const PERCENTAGES = ['%', '٪'];\nexport const ARABIC_RE = new RegExp(`[${ARABIC_NUMERALS.join('')}]`, 'g');\nexport const HAN_RE = new RegExp(`[${HAN_NUMERALS.join('')}]`, 'g');\nexport const PERCENT_RE = new RegExp(`[${PERCENTAGES.join('')}]`);\nexport function getNumberLocaleDetails(locale, options) {\n  const parts = getFormatter(locale, options).formatToParts(11111.1);\n  const result = {};\n  parts.forEach(part => {\n    result[part.type] = part.value;\n  });\n\n  // The formatting options may result in not returning a decimal.\n  getFormatter(locale).formatToParts(0.1).forEach(part => {\n    if (part.type === 'decimal') {\n      result[part.type] = part.value;\n    }\n  });\n  return result;\n}\nexport function parseNumber(formattedNumber, locale, options) {\n  let computedLocale = locale;\n  if (computedLocale === undefined) {\n    if (ARABIC_RE.test(formattedNumber)) {\n      computedLocale = 'ar';\n    } else if (HAN_RE.test(formattedNumber)) {\n      computedLocale = 'zh';\n    }\n  }\n  const {\n    group,\n    decimal,\n    currency,\n    unit\n  } = getNumberLocaleDetails(computedLocale, options);\n  let groupRegex = null;\n  if (group) {\n    // Check if the group separator is a space-like character.\n    // If so, we'll replace all such characters with an empty string.\n    groupRegex = /\\p{Zs}/u.test(group) ? /\\p{Zs}/gu : new RegExp(`\\\\${group}`, 'g');\n  }\n  const regexesToReplace = [{\n    regex: group ? groupRegex : null,\n    replacement: ''\n  }, {\n    regex: decimal ? new RegExp(`\\\\${decimal}`, 'g') : null,\n    replacement: '.'\n  }, {\n    regex: currency ? new RegExp(`\\\\${currency}`, 'g') : null,\n    replacement: ''\n  }, {\n    regex: unit ? new RegExp(`\\\\${unit}`, 'g') : null,\n    replacement: ''\n  }, {\n    regex: ARABIC_RE,\n    replacement: match => ARABIC_NUMERALS.indexOf(match).toString()\n  }, {\n    regex: HAN_RE,\n    replacement: match => HAN_NUMERALS.indexOf(match).toString()\n  }];\n  const unformattedNumber = regexesToReplace.reduce((acc, {\n    regex,\n    replacement\n  }) => {\n    if (!regex) {\n      return acc;\n    }\n    return acc.replace(regex, replacement);\n  }, formattedNumber);\n  let num = parseFloat(unformattedNumber);\n  const style = options?.style;\n  const isUnitPercent = style === 'unit' && options?.unit === 'percent';\n  const isPercent = PERCENT_RE.test(formattedNumber) || style === 'percent';\n  if (!isUnitPercent && isPercent) {\n    num /= 100;\n  }\n  if (Number.isNaN(num)) {\n    return null;\n  }\n  return num;\n}", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\nimport * as React from 'react';\nimport { useLayoutEffect } from 'react';\nimport { floor } from '@floating-ui/utils';\nimport { tabbable } from 'tabbable';\n\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\n\nconst FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\nfunction matchesFocusVisible(element) {\n  // We don't want to block focus from working with `visibleOnly`\n  // (JSDOM doesn't match `:focus-visible` when the element has `:focus`)\n  if (!element || isJSDOM()) return true;\n  try {\n    return element.matches(':focus-visible');\n  } catch (_e) {\n    return true;\n  }\n}\nfunction getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(\"[\" + FOCUSABLE_ATTRIBUTE + \"]\") || floatingElement;\n}\n\nfunction getNodeChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getNodeChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\nfunction getNodeAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\n\nvar isClient = typeof document !== 'undefined';\n\nvar noop = function noop() {};\nvar index = isClient ? useLayoutEffect : noop;\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nfunction isDifferentGridRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfListBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinListIndex(listRef, disabledIndices) {\n  return findNonDisabledListIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxListIndex(listRef, disabledIndices) {\n  return findNonDisabledListIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledListIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= listRef.current.length - 1 && isListIndexDisabled(listRef, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(listRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    rtl,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledListIndex(listRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledListIndex(listRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentGridRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledListIndex(listRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentGridRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentGridRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledListIndex(listRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentGridRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfListBounds(listRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT) ? maxIndex : findNonDisabledListIndex(listRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction createGridCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getGridCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getGridCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isListIndexDisabled(listRef, index, disabledIndices) {\n  if (typeof disabledIndices === 'function') {\n    return disabledIndices(index);\n  } else if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = listRef.current[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, dir) {\n  const list = tabbable(container, getTabbableOptions());\n  const len = list.length;\n  if (len === 0) return;\n  const active = activeElement(getDocument(container));\n  const index = list.indexOf(active);\n  const nextIndex = index === -1 ? dir === 1 ? 0 : len - 1 : index + dir;\n  return list[nextIndex];\n}\nfunction getNextTabbable(referenceElement) {\n  return getTabbableIn(getDocument(referenceElement).body, 1) || referenceElement;\n}\nfunction getPreviousTabbable(referenceElement) {\n  return getTabbableIn(getDocument(referenceElement).body, -1) || referenceElement;\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\nexport { activeElement, contains, createGridCellMap, disableFocusInside, enableFocusInside, findNonDisabledListIndex, getDeepestNode, getDocument, getFloatingFocusElement, getGridCellIndexOfCorner, getGridCellIndices, getGridNavigatedIndex, getMaxListIndex, getMinListIndex, getNextTabbable, getNodeAncestors, getNodeChildren, getPlatform, getPreviousTabbable, getTabbableOptions, getTarget, getUserAgent, isAndroid, isDifferentGridRow, isEventTargetWithin, isIndexOutOfListBounds, isJSDOM, isListIndexDisabled, isMac, isMouseLikePointerType, isOutsideEvent, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, matchesFocusVisible, stopEvent, useEffectEvent, useLatestRef, index as useModernLayoutEffect };\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "'use client';\n\nimport { useModernLayoutEffect } from \"./useModernLayoutEffect.js\";\nimport { useLazyRef } from \"./useLazyRef.js\";\nexport function useLatestRef(value) {\n  const latest = useLazyRef(createLatestRef, value).current;\n  latest.next = value;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useModernLayoutEffect(latest.effect);\n  return latest;\n}\nfunction createLatestRef(value) {\n  const latest = {\n    current: value,\n    next: value,\n    effect: () => {\n      latest.current = latest.next;\n    }\n  };\n  return latest;\n}", "'use client';\n\nimport * as React from 'react';\n\n/**\n * Returns a function that forces a rerender.\n */\nexport function useForcedRerendering() {\n  const [, setState] = React.useState({});\n  return React.useCallback(() => {\n    setState({});\n  }, []);\n}", "'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride, prefix = 'mui') {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`${prefix}-${globalId}`);\n    }\n  }, [defaultId, prefix]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport function useId(idOverride, prefix) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? (prefix ? `${prefix}-${reactId}` : reactId);\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride, prefix);\n}", "'use client';\n\nimport { useId } from \"./useId.js\";\n\n/**\n * Wraps `useId` and prefixes generated `id`s with `base-ui-`\n * @param {string | undefined} idOverride overrides the generated id when provided\n * @returns {string | undefined}\n */\nexport function useBaseUiId(idOverride) {\n  return useId(idOverride, 'base-ui');\n}", "import { getUserAgent } from '@floating-ui/react/utils';\nconst nav = getNavigatorData();\nexport const isWebKit = typeof CSS === 'undefined' || !CSS.supports ? false : CSS.supports('-webkit-backdrop-filter:none');\nexport const isIOS =\n// iPads can claim to be MacIntel\nnav.platform === 'MacIntel' && nav.maxTouchPoints > 1 ? true : /iP(hone|ad|od)|iOS/.test(nav.platform);\nexport const isFirefox = typeof navigator !== 'undefined' && /firefox/i.test(getUserAgent());\n\n// Avoid Chrome DevTools blue warning.\nfunction getNavigatorData() {\n  if (typeof navigator === 'undefined') {\n    return {\n      platform: '',\n      maxTouchPoints: -1\n    };\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData?.platform) {\n    return {\n      platform: uaData.platform,\n      maxTouchPoints: navigator.maxTouchPoints\n    };\n  }\n  return {\n    platform: navigator.platform,\n    maxTouchPoints: navigator.maxTouchPoints\n  };\n}", "export const CHANGE_VALUE_TICK_DELAY = 60;\nexport const START_AUTO_CHANGE_DELAY = 400;\nexport const TOUCH_TIMEOUT = 50;\nexport const MAX_POINTER_MOVES_AFTER_TOUCH = 3;\nexport const SCROLLING_POINTER_MOVE_DISTANCE = 8;\nexport const DEFAULT_STEP = 1;", "export function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {\n  return Math.max(min, Math.min(val, max));\n}", "import { getFormatter } from \"../../utils/formatNumber.js\";\nimport { clamp } from \"../../utils/clamp.js\";\nexport function removeFloatingPointErrors(value, format = {}) {\n  return parseFloat(getFormatter('en-US', {\n    maximumFractionDigits: format.maximumFractionDigits,\n    minimumFractionDigits: format.minimumFractionDigits,\n    useGrouping: false\n  }).format(value));\n}\nexport function toValidatedNumber(value, {\n  step,\n  minWithDefault,\n  maxWithDefault,\n  minWithZeroDefault,\n  format,\n  snapOnStep,\n  small\n}) {\n  if (value === null) {\n    return value;\n  }\n  const clampedValue = clamp(value, minWithDefault, maxWithDefault);\n  if (step != null && snapOnStep) {\n    if (small) {\n      const stepsFromMin = (clampedValue - minWithZeroDefault) / step;\n      const roundedSteps = Math.round(stepsFromMin);\n      const snappedValue = minWithZeroDefault + roundedSteps * step;\n      return removeFloatingPointErrors(snappedValue, format);\n    }\n\n    // If a real minimum is provided, use it\n    const base = minWithDefault !== Number.MIN_SAFE_INTEGER ? minWithDefault : minWithZeroDefault;\n    if (step > 0) {\n      // \"Undo\" the increment by subtracting step, then snap.\n      const unsnapped = clampedValue - step;\n      const steps = Math.floor((unsnapped - base) / step);\n      // Reapply the increment by adding step\n      return removeFloatingPointErrors(base + steps * step + step, format);\n    }\n    if (step < 0) {\n      const absStep = Math.abs(step);\n      const unsnapped = clampedValue - step;\n      const steps = Math.ceil((unsnapped - base) / absStep);\n      return removeFloatingPointErrors(base + steps * absStep + step, format);\n    }\n  }\n  return removeFloatingPointErrors(clampedValue, format);\n}", "'use client';\n\nimport * as React from 'react';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * Groups the input with the increment and decrement buttons.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldGroup = /*#__PURE__*/React.forwardRef(function NumberFieldGroup(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      role: 'group'\n    }, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldGroup.displayName = \"NumberFieldGroup\";", "'use client';\n\nimport * as React from 'react';\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useButton } from \"../../use-button/index.js\";\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useNumberFieldButton } from \"../root/useNumberFieldButton.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\n\n/**\n * A stepper button that increases the field value when clicked.\n * Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldIncrement = /*#__PURE__*/React.forwardRef(function NumberFieldIncrement(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    disabled: disabledProp = false,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled: contextDisabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isPressedRef,\n    locale,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    state,\n    stopAutoChange,\n    value,\n    valueRef\n  } = useNumberFieldRootContext();\n  const disabled = disabledProp || contextDisabled;\n  const {\n    props\n  } = useNumberFieldButton({\n    isIncrement: true,\n    inputRef,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    value,\n    inputValue,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    getStepAmount,\n    incrementValue,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    locale\n  });\n  const {\n    getButtonProps,\n    buttonRef\n  } = useButton({\n    disabled\n  });\n  const element = useRenderElement('button', componentProps, {\n    ref: [forwardedRef, buttonRef],\n    state,\n    props: [props, elementProps, getButtonProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldIncrement.displayName = \"NumberFieldIncrement\";", "'use client';\n\nimport * as React from 'react';\nimport { useForkRef } from \"../utils/useForkRef.js\";\nimport { makeEventPreventable, mergeProps } from \"../merge-props/index.js\";\nimport { useModernLayoutEffect } from \"../utils/useModernLayoutEffect.js\";\nimport { useEventCallback } from \"../utils/useEventCallback.js\";\nimport { useRootElementName } from \"../utils/useRootElementName.js\";\nimport { useCompositeRootContext } from \"../composite/root/CompositeRootContext.js\";\nconst BUTTON_TYPES = new Set(['button', 'submit', 'reset']);\nexport function useButton(parameters = {}) {\n  const {\n    buttonRef: externalRef,\n    disabled = false,\n    focusableWhenDisabled,\n    tabIndex = 0,\n    type = 'button',\n    elementName: elementNameProp\n  } = parameters;\n  const buttonRef = React.useRef(null);\n  const {\n    rootElementName: elementName,\n    updateRootElementName\n  } = useRootElementName({\n    rootElementName: elementNameProp\n  });\n  const isCompositeItem = useCompositeRootContext(true) !== undefined;\n  const isNativeButton = useEventCallback(() => {\n    const element = buttonRef.current;\n    return elementName === 'BUTTON' || elementName === 'INPUT' && BUTTON_TYPES.has(element?.type);\n  });\n  const isValidLink = useEventCallback(() => {\n    const element = buttonRef.current;\n    return Boolean(elementName === 'A' && element?.href);\n  });\n  const mergedRef = useForkRef(updateRootElementName, externalRef, buttonRef);\n  const buttonProps = React.useMemo(() => {\n    const additionalProps = {};\n    if (tabIndex !== undefined && !isCompositeItem) {\n      additionalProps.tabIndex = tabIndex;\n    }\n    if (elementName === 'BUTTON' || elementName === 'INPUT') {\n      if (focusableWhenDisabled || isCompositeItem) {\n        additionalProps['aria-disabled'] = disabled;\n      } else if (!isCompositeItem) {\n        additionalProps.disabled = disabled;\n      }\n    } else if (elementName !== '') {\n      if (elementName !== 'A') {\n        additionalProps.role = 'button';\n        if (!isCompositeItem) {\n          additionalProps.tabIndex = tabIndex ?? 0;\n        }\n      } else if (tabIndex && !isCompositeItem) {\n        additionalProps.tabIndex = tabIndex;\n      }\n      if (disabled) {\n        additionalProps['aria-disabled'] = disabled;\n        if (!isCompositeItem) {\n          additionalProps.tabIndex = focusableWhenDisabled ? tabIndex ?? 0 : -1;\n        }\n      }\n    }\n    return additionalProps;\n  }, [disabled, elementName, focusableWhenDisabled, isCompositeItem, tabIndex]);\n\n  // handles a disabled composite button rendering another button, e.g.\n  // <Toolbar.Button disabled render={<Menu.Trigger />} />\n  // the `disabled` prop needs to pass through 2 `useButton`s then finally\n  // delete the `disabled` attribute from DOM\n  useModernLayoutEffect(() => {\n    const element = buttonRef.current;\n    if (!(element instanceof HTMLButtonElement)) {\n      return;\n    }\n    if (isCompositeItem && disabled && buttonProps.disabled === undefined && element.disabled) {\n      element.disabled = false;\n    }\n  }, [disabled, buttonProps.disabled, isCompositeItem]);\n  const getButtonProps = React.useCallback((externalProps = {}) => {\n    const {\n      onClick: externalOnClick,\n      onMouseDown: externalOnMouseDown,\n      onKeyUp: externalOnKeyUp,\n      onKeyDown: externalOnKeyDown,\n      onPointerDown: externalOnPointerDown,\n      ...otherExternalProps\n    } = externalProps;\n    return mergeProps({\n      type: elementName === 'BUTTON' || elementName === 'INPUT' ? type : undefined,\n      onClick(event) {\n        if (disabled) {\n          event.preventDefault();\n          return;\n        }\n        externalOnClick?.(event);\n      },\n      onMouseDown(event) {\n        if (!disabled) {\n          externalOnMouseDown?.(event);\n        }\n      },\n      onKeyDown(event) {\n        if (\n        // allow Tabbing away from focusableWhenDisabled buttons\n        disabled && focusableWhenDisabled && event.key !== 'Tab' || event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n          event.preventDefault();\n        }\n        if (!disabled) {\n          makeEventPreventable(event);\n          externalOnKeyDown?.(event);\n        }\n        if (event.baseUIHandlerPrevented) {\n          return;\n        }\n\n        // Keyboard accessibility for non interactive elements\n        if (event.target === event.currentTarget && !isNativeButton() && !isValidLink() && event.key === 'Enter' && !disabled) {\n          externalOnClick?.(event);\n          event.preventDefault();\n        }\n      },\n      onKeyUp(event) {\n        // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n        // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n        // Keyboard accessibility for non interactive elements\n        if (!disabled) {\n          makeEventPreventable(event);\n          externalOnKeyUp?.(event);\n        }\n        if (event.baseUIHandlerPrevented) {\n          return;\n        }\n        if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ') {\n          externalOnClick?.(event);\n        }\n      },\n      onPointerDown(event) {\n        if (disabled) {\n          event.preventDefault();\n          return;\n        }\n        externalOnPointerDown?.(event);\n      },\n      ref: mergedRef\n    }, buttonProps, otherExternalProps);\n  }, [buttonProps, disabled, elementName, focusableWhenDisabled, isNativeButton, isValidLink, mergedRef, type]);\n  return {\n    getButtonProps,\n    buttonRef: mergedRef\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport { useModernLayoutEffect } from \"./useModernLayoutEffect.js\";\nimport { warn } from \"./warn.js\";\n/**\n * Use this function determine the host element correctly on the server (in a SSR context, for example Next.js)\n */\nexport function useRootElementName(parameters) {\n  const {\n    rootElementName: rootElementNameProp = ''\n  } = parameters;\n  const [rootElementName, setRootElementName] = React.useState(rootElementNameProp.toUpperCase());\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useModernLayoutEffect(() => {\n      if (rootElementNameProp && rootElementName !== rootElementNameProp.toUpperCase()) {\n        warn(`useRootElementName expected the '${rootElementNameProp}' element, but a '${rootElementName.toLowerCase()}' was rendered instead`, 'This may cause hydration issues in an SSR context, for example in a Next.js app');\n      }\n    }, [rootElementNameProp, rootElementName]);\n  }\n  const updateRootElementName = React.useCallback(element => {\n    setRootElementName(element?.tagName ?? '');\n  }, []);\n  return {\n    rootElementName,\n    updateRootElementName\n  };\n}", "let set;\nif (process.env.NODE_ENV !== 'production') {\n  set = new Set();\n}\nexport function warn(...messages) {\n  if (process.env.NODE_ENV !== 'production') {\n    const messageKey = messages.join(' ');\n    if (!set.has(messageKey)) {\n      set.add(messageKey);\n      console.warn(`Base UI: ${messageKey}`);\n    }\n  }\n}", "'use client';\n\nimport * as React from 'react';\nexport const CompositeRootContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") CompositeRootContext.displayName = \"CompositeRootContext\";\nexport function useCompositeRootContext(optional = false) {\n  const context = React.useContext(CompositeRootContext);\n  if (context === undefined && !optional) {\n    throw new Error('Base UI: CompositeRootContext is missing. Composite parts must be placed within <Composite.Root>.');\n  }\n  return context;\n}", "'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_STEP, MAX_POINTER_MOVES_AFTER_TOUCH, SCROLLING_POINTER_MOVE_DISTANCE, TOUCH_TIMEOUT } from \"../utils/constants.js\";\nimport { parseNumber } from \"../utils/parse.js\";\nimport { useEventCallback } from \"../../utils/useEventCallback.js\";\nexport function useNumberFieldButton(params) {\n  const {\n    allowInputSyncRef,\n    disabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isIncrement,\n    isPressedRef,\n    locale,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    stopAutoChange,\n    value,\n    valueRef\n  } = params;\n  const incrementDownCoordsRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const isTouchingButtonRef = React.useRef(false);\n  const ignoreClickRef = React.useRef(false);\n  const pointerTypeRef = React.useRef('');\n  const isMin = value != null && value <= minWithDefault;\n  const isMax = value != null && value >= maxWithDefault;\n  const commitValue = useEventCallback(nativeEvent => {\n    allowInputSyncRef.current = true;\n\n    // The input may be dirty but not yet blurred, so the value won't have been committed.\n    const parsedValue = parseNumber(inputValue, locale, formatOptionsRef.current);\n    if (parsedValue !== null) {\n      // The increment value function needs to know the current input value to increment it\n      // correctly.\n      valueRef.current = parsedValue;\n      setValue(parsedValue, nativeEvent);\n    }\n  });\n  const props = React.useMemo(() => ({\n    disabled: disabled || (isIncrement ? isMax : isMin),\n    'aria-readonly': readOnly || undefined,\n    'aria-label': isIncrement ? 'Increase' : 'Decrease',\n    'aria-controls': id,\n    // Keyboard users shouldn't have access to the buttons, since they can use the input element\n    // to change the value. On the other hand, `aria-hidden` is not applied because touch screen\n    // readers should be able to use the buttons.\n    tabIndex: -1,\n    style: {\n      WebkitUserSelect: 'none',\n      userSelect: 'none'\n    },\n    onTouchStart() {\n      isTouchingButtonRef.current = true;\n    },\n    onTouchEnd() {\n      isTouchingButtonRef.current = false;\n    },\n    onClick(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || isDisabled || (\n      // If it's not a keyboard/virtual click, ignore.\n      pointerTypeRef.current === 'touch' ? ignoreClickRef.current : event.detail !== 0)) {\n        return;\n      }\n      commitValue(event.nativeEvent);\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n      incrementValue(amount, isIncrement ? 1 : -1, undefined, event.nativeEvent);\n    },\n    onPointerDown(event) {\n      const isMainButton = !event.button || event.button === 0;\n      const isDisabled = disabled || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || readOnly || !isMainButton || isDisabled) {\n        return;\n      }\n      pointerTypeRef.current = event.pointerType;\n      ignoreClickRef.current = false;\n      isPressedRef.current = true;\n      incrementDownCoordsRef.current = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      commitValue(event.nativeEvent);\n\n      // Note: \"pen\" is sometimes returned for mouse usage on Linux Chrome.\n      if (event.pointerType !== 'touch') {\n        event.preventDefault();\n        inputRef.current?.focus();\n        startAutoChange(isIncrement, event);\n      } else {\n        // We need to check if the pointerdown was intentional, and not the result of a scroll\n        // or pinch-zoom. In that case, we don't want to change the value.\n        intentionalTouchCheckTimeout.start(TOUCH_TIMEOUT, () => {\n          const moves = movesAfterTouchRef.current;\n          movesAfterTouchRef.current = 0;\n          if (moves != null && moves < MAX_POINTER_MOVES_AFTER_TOUCH) {\n            ignoreClickRef.current = true;\n            startAutoChange(isIncrement, event);\n          } else {\n            stopAutoChange();\n          }\n        });\n      }\n    },\n    onPointerMove(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (isDisabled || event.pointerType !== 'touch' || !isPressedRef.current) {\n        return;\n      }\n      if (movesAfterTouchRef.current != null) {\n        movesAfterTouchRef.current += 1;\n      }\n      const {\n        x,\n        y\n      } = incrementDownCoordsRef.current;\n      const dx = x - event.clientX;\n      const dy = y - event.clientY;\n\n      // An alternative to this technique is to detect when the NumberField's parent container\n      // has been scrolled\n      if (dx ** 2 + dy ** 2 > SCROLLING_POINTER_MOVE_DISTANCE ** 2) {\n        stopAutoChange();\n      }\n    },\n    onMouseEnter(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || isDisabled || !isPressedRef.current || isTouchingButtonRef.current) {\n        return;\n      }\n      startAutoChange(isIncrement, event);\n    },\n    onMouseLeave() {\n      if (isTouchingButtonRef.current) {\n        return;\n      }\n      stopAutoChange();\n    },\n    onMouseUp() {\n      if (isTouchingButtonRef.current) {\n        return;\n      }\n      stopAutoChange();\n    }\n  }), [commitValue, disabled, getStepAmount, id, incrementValue, inputRef, isIncrement, intentionalTouchCheckTimeout, isMax, isMin, isPressedRef, movesAfterTouchRef, readOnly, startAutoChange, stopAutoChange]);\n  return React.useMemo(() => ({\n    props\n  }), [props]);\n}", "'use client';\n\nimport * as React from 'react';\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useButton } from \"../../use-button/index.js\";\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useNumberFieldButton } from \"../root/useNumberFieldButton.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\n\n/**\n * A stepper button that decreases the field value when clicked.\n * Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldDecrement = /*#__PURE__*/React.forwardRef(function NumberFieldDecrement(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    disabled: disabledProp = false,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled: contextDisabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isPressedRef,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    state,\n    stopAutoChange,\n    value,\n    valueRef,\n    locale\n  } = useNumberFieldRootContext();\n  const disabled = disabledProp || contextDisabled;\n  const {\n    props\n  } = useNumberFieldButton({\n    isIncrement: false,\n    inputRef,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    value,\n    inputValue,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    getStepAmount,\n    incrementValue,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    locale\n  });\n  const {\n    getButtonProps,\n    buttonRef\n  } = useButton({\n    disabled\n  });\n  const element = useRenderElement('button', componentProps, {\n    ref: [forwardedRef, buttonRef],\n    state,\n    props: [props, elementProps, getButtonProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldDecrement.displayName = \"NumberFieldDecrement\";", "'use client';\n\nimport * as React from 'react';\nimport { stopEvent, useModernLayoutEffect } from '@floating-ui/react/utils';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useFieldRootContext } from \"../../field/root/FieldRootContext.js\";\nimport { useFieldControlValidation } from \"../../field/control/useFieldControlValidation.js\";\nimport { fieldValidityMapping } from \"../../field/utils/constants.js\";\nimport { DEFAULT_STEP } from \"../utils/constants.js\";\nimport { ARABIC_RE, HAN_RE, getNumberLocaleDetails, parseNumber } from \"../utils/parse.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useField } from \"../../field/useField.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nconst customStyleHookMapping = {\n  ...fieldValidityMapping,\n  ...styleHookMapping\n};\nconst NAVIGATE_KEYS = new Set(['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab', 'Enter', 'Escape']);\n\n/**\n * The native input control in the number field.\n * Renders an `<input>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldInput = /*#__PURE__*/React.forwardRef(function NumberFieldInput(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled,\n    formatOptionsRef,\n    getAllowedNonNumericKeys,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputMode,\n    inputValue,\n    max,\n    min,\n    name,\n    readOnly,\n    required,\n    setValue,\n    state,\n    setInputValue,\n    locale,\n    inputRef,\n    value\n  } = useNumberFieldRootContext();\n  const {\n    clearErrors\n  } = useFormContext();\n  const {\n    labelId,\n    validationMode,\n    setTouched,\n    setFocused,\n    invalid\n  } = useFieldRootContext();\n  const {\n    getInputValidationProps,\n    getValidationProps,\n    commitValidation,\n    inputRef: inputValidationRef\n  } = useFieldControlValidation();\n  const hasTouchedInputRef = React.useRef(false);\n  const blockRevalidationRef = React.useRef(false);\n  useField({\n    id,\n    commitValidation,\n    value,\n    controlRef: inputRef\n  });\n  const prevValueRef = React.useRef(value);\n  const prevInputValueRef = React.useRef(inputValue);\n  useModernLayoutEffect(() => {\n    if (prevValueRef.current === value && prevInputValueRef.current === inputValue) {\n      return;\n    }\n    clearErrors(name);\n    if (validationMode === 'onChange') {\n      commitValidation(value);\n    }\n  }, [value, inputValue, name, clearErrors, validationMode, commitValidation]);\n  useModernLayoutEffect(() => {\n    if (prevValueRef.current === value || validationMode === 'onChange') {\n      return;\n    }\n    if (blockRevalidationRef.current) {\n      blockRevalidationRef.current = false;\n      return;\n    }\n    commitValidation(value, true);\n  }, [commitValidation, validationMode, value]);\n  useModernLayoutEffect(() => {\n    prevValueRef.current = value;\n    prevInputValueRef.current = inputValue;\n  }, [value, inputValue]);\n  const inputProps = {\n    id,\n    required,\n    disabled,\n    readOnly,\n    inputMode,\n    value: inputValue,\n    type: 'text',\n    autoComplete: 'off',\n    autoCorrect: 'off',\n    spellCheck: 'false',\n    'aria-roledescription': 'Number field',\n    'aria-invalid': invalid || undefined,\n    'aria-labelledby': labelId,\n    // If the server's locale does not match the client's locale, the formatting may not match,\n    // causing a hydration mismatch.\n    suppressHydrationWarning: true,\n    onFocus(event) {\n      if (event.defaultPrevented || readOnly || disabled || hasTouchedInputRef.current) {\n        return;\n      }\n      hasTouchedInputRef.current = true;\n      setFocused(true);\n\n      // Browsers set selection at the start of the input field by default. We want to set it at\n      // the end for the first focus.\n      const target = event.currentTarget;\n      const length = target.value.length;\n      target.setSelectionRange(length, length);\n    },\n    onBlur(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n      setTouched(true);\n      setFocused(false);\n      allowInputSyncRef.current = true;\n      if (inputValue.trim() === '') {\n        setValue(null);\n        if (validationMode === 'onBlur') {\n          commitValidation(null);\n        }\n        return;\n      }\n      const parsedValue = parseNumber(inputValue, locale, formatOptionsRef.current);\n      if (parsedValue !== null) {\n        blockRevalidationRef.current = true;\n        setValue(parsedValue, event.nativeEvent);\n        if (validationMode === 'onBlur') {\n          commitValidation(parsedValue);\n        }\n      }\n    },\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      allowInputSyncRef.current = false;\n      const targetValue = event.target.value;\n      if (targetValue.trim() === '') {\n        setInputValue(targetValue);\n        setValue(null, event.nativeEvent);\n        return;\n      }\n      if (event.isTrusted) {\n        setInputValue(targetValue);\n        return;\n      }\n      const parsedValue = parseNumber(targetValue, locale, formatOptionsRef.current);\n      if (parsedValue !== null) {\n        setInputValue(targetValue);\n        setValue(parsedValue, event.nativeEvent);\n      }\n    },\n    onKeyDown(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n      const nativeEvent = event.nativeEvent;\n      allowInputSyncRef.current = true;\n      const allowedNonNumericKeys = getAllowedNonNumericKeys();\n      let isAllowedNonNumericKey = allowedNonNumericKeys.has(event.key);\n      const {\n        decimal,\n        currency,\n        percentSign\n      } = getNumberLocaleDetails([], formatOptionsRef.current);\n      const selectionStart = event.currentTarget.selectionStart;\n      const selectionEnd = event.currentTarget.selectionEnd;\n      const isAllSelected = selectionStart === 0 && selectionEnd === inputValue.length;\n\n      // Allow the minus key only if there isn't already a plus or minus sign, or if all the text\n      // is selected, or if only the minus sign is highlighted.\n      if (event.key === '-' && allowedNonNumericKeys.has('-')) {\n        const isMinusHighlighted = selectionStart === 0 && selectionEnd === 1 && inputValue[0] === '-';\n        isAllowedNonNumericKey = !inputValue.includes('-') || isAllSelected || isMinusHighlighted;\n      }\n\n      // Only allow one of each symbol.\n      [decimal, currency, percentSign].forEach(symbol => {\n        if (event.key === symbol) {\n          const symbolIndex = inputValue.indexOf(symbol);\n          const isSymbolHighlighted = selectionStart === symbolIndex && selectionEnd === symbolIndex + 1;\n          isAllowedNonNumericKey = !inputValue.includes(symbol) || isAllSelected || isSymbolHighlighted;\n        }\n      });\n      const isLatinNumeral = /^[0-9]$/.test(event.key);\n      const isArabicNumeral = ARABIC_RE.test(event.key);\n      const isHanNumeral = HAN_RE.test(event.key);\n      const isNavigateKey = NAVIGATE_KEYS.has(event.key);\n      if (\n      // Allow composition events (e.g., pinyin)\n      // event.nativeEvent.isComposing does not work in Safari:\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      event.which === 229 || event.altKey || event.ctrlKey || event.metaKey || isAllowedNonNumericKey || isLatinNumeral || isArabicNumeral || isHanNumeral || isNavigateKey) {\n        return;\n      }\n\n      // We need to commit the number at this point if the input hasn't been blurred.\n      const parsedValue = parseNumber(inputValue, locale, formatOptionsRef.current);\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n\n      // Prevent insertion of text or caret from moving.\n      stopEvent(event);\n      if (event.key === 'ArrowUp') {\n        incrementValue(amount, 1, parsedValue, nativeEvent);\n      } else if (event.key === 'ArrowDown') {\n        incrementValue(amount, -1, parsedValue, nativeEvent);\n      } else if (event.key === 'Home' && min != null) {\n        setValue(min, nativeEvent);\n      } else if (event.key === 'End' && max != null) {\n        setValue(max, nativeEvent);\n      }\n    },\n    onPaste(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n\n      // Prevent `onChange` from being called.\n      event.preventDefault();\n      const clipboardData = event.clipboardData || window.Clipboard;\n      const pastedData = clipboardData.getData('text/plain');\n      const parsedValue = parseNumber(pastedData, locale, formatOptionsRef.current);\n      if (parsedValue !== null) {\n        allowInputSyncRef.current = false;\n        setValue(parsedValue, event.nativeEvent);\n        setInputValue(pastedData);\n      }\n    }\n  };\n  const element = useRenderElement('input', componentProps, {\n    ref: [forwardedRef, inputRef, inputValidationRef],\n    state,\n    props: [inputProps, getInputValidationProps(), getValidationProps(), elementProps],\n    customStyleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldInput.displayName = \"NumberFieldInput\";", "'use client';\n\nimport * as React from 'react';\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { useEventCallback } from \"../../utils/useEventCallback.js\";\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { mergeProps } from \"../../merge-props/index.js\";\nimport { DEFAULT_VALIDITY_STATE } from \"../utils/constants.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { getCombinedFieldValidityData } from \"../utils/getCombinedFieldValidityData.js\";\nconst validityKeys = Object.keys(DEFAULT_VALIDITY_STATE);\nfunction isOnlyValueMissing(state) {\n  if (!state || state.valid || !state.valueMissing) {\n    return false;\n  }\n  let onlyValueMissing = false;\n  for (const key of validityKeys) {\n    if (key === 'valid') {\n      continue;\n    }\n    if (key === 'valueMissing') {\n      onlyValueMissing = state[key];\n    }\n    if (state[key]) {\n      onlyValueMissing = false;\n    }\n  }\n  return onlyValueMissing;\n}\nexport function useFieldControlValidation() {\n  const {\n    setValidityData,\n    validate,\n    messageIds,\n    validityData,\n    validationMode,\n    validationDebounceTime,\n    invalid,\n    markedDirtyRef,\n    controlId,\n    state,\n    name\n  } = useFieldRootContext();\n  const {\n    formRef,\n    clearErrors\n  } = useFormContext();\n  const timeout = useTimeout();\n  const inputRef = React.useRef(null);\n  const commitValidation = useEventCallback(async (value, revalidate = false) => {\n    const element = inputRef.current;\n    if (!element) {\n      return;\n    }\n    if (revalidate) {\n      if (state.valid !== false) {\n        return;\n      }\n      const currentNativeValidity = element.validity;\n      if (!currentNativeValidity.valueMissing) {\n        // The 'valueMissing' (required) condition has been resolved by the user typing.\n        // Temporarily mark the field as valid for this onChange event.\n        // Other native errors (e.g., typeMismatch) will be caught by full validation on blur or submit.\n        const nextValidityData = {\n          value,\n          state: {\n            ...DEFAULT_VALIDITY_STATE,\n            valid: true\n          },\n          error: '',\n          errors: [],\n          initialValue: validityData.initialValue\n        };\n        element.setCustomValidity('');\n        if (controlId) {\n          const currentFieldData = formRef.current.fields.get(controlId);\n          if (currentFieldData) {\n            formRef.current.fields.set(controlId, {\n              ...currentFieldData,\n              ...getCombinedFieldValidityData(nextValidityData, false) // invalid = false\n            });\n          }\n        }\n        setValidityData(nextValidityData);\n        return;\n      }\n\n      // Value is still missing, or other conditions apply.\n      // Let's use a representation of current validity for isOnlyValueMissing.\n      const currentNativeValidityObject = validityKeys.reduce((acc, key) => {\n        acc[key] = currentNativeValidity[key];\n        return acc;\n      }, {});\n\n      // If it's (still) natively invalid due to something other than just valueMissing,\n      // then bail from this revalidation on change to avoid \"scolding\" for other errors.\n      if (!currentNativeValidityObject.valid && !isOnlyValueMissing(currentNativeValidityObject)) {\n        return;\n      }\n\n      // If valueMissing is still true AND it's the only issue, or if the field is now natively valid,\n      // let it fall through to the main validation logic below.\n    }\n    function getState(el) {\n      const computedState = validityKeys.reduce((acc, key) => {\n        acc[key] = el.validity[key];\n        return acc;\n      }, {});\n      let hasOnlyValueMissingError = false;\n      for (const key of validityKeys) {\n        if (key === 'valid') {\n          continue;\n        }\n        if (key === 'valueMissing' && computedState[key]) {\n          hasOnlyValueMissingError = true;\n        } else if (computedState[key]) {\n          return computedState;\n        }\n      }\n\n      // Only make `valueMissing` mark the field invalid if it's been changed\n      // to reduce error noise.\n      if (hasOnlyValueMissingError && !markedDirtyRef.current) {\n        computedState.valid = true;\n        computedState.valueMissing = false;\n      }\n      return computedState;\n    }\n    timeout.clear();\n    let result = null;\n    let validationErrors = [];\n    const nextState = getState(element);\n    let defaultValidationMessage;\n    if (element.validationMessage) {\n      defaultValidationMessage = element.validationMessage;\n      validationErrors = [element.validationMessage];\n    } else {\n      const resultOrPromise = validate(value);\n      if (typeof resultOrPromise === 'object' && resultOrPromise !== null && 'then' in resultOrPromise) {\n        result = await resultOrPromise;\n      } else {\n        result = resultOrPromise;\n      }\n      if (result !== null) {\n        nextState.valid = false;\n        nextState.customError = true;\n        if (Array.isArray(result)) {\n          validationErrors = result;\n          element.setCustomValidity(result.join('\\n'));\n        } else if (result) {\n          validationErrors = [result];\n          element.setCustomValidity(result);\n        }\n      }\n    }\n    const nextValidityData = {\n      value,\n      state: nextState,\n      error: defaultValidationMessage ?? (Array.isArray(result) ? result[0] : result ?? ''),\n      errors: validationErrors,\n      initialValue: validityData.initialValue\n    };\n    if (controlId) {\n      const currentFieldData = formRef.current.fields.get(controlId);\n      if (currentFieldData) {\n        formRef.current.fields.set(controlId, {\n          ...currentFieldData,\n          ...getCombinedFieldValidityData(nextValidityData, invalid)\n        });\n      }\n    }\n    setValidityData(nextValidityData);\n  });\n  const getValidationProps = React.useCallback((externalProps = {}) => mergeProps({\n    ...(messageIds.length && {\n      'aria-describedby': messageIds.join(' ')\n    }),\n    ...(state.valid === false && {\n      'aria-invalid': true\n    })\n  }, externalProps), [messageIds, state.valid]);\n  const getInputValidationProps = React.useCallback((externalProps = {}) => mergeProps({\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      clearErrors(name);\n      if (validationMode !== 'onChange') {\n        commitValidation(event.currentTarget.value, true);\n        return;\n      }\n      if (invalid) {\n        return;\n      }\n      const element = event.currentTarget;\n      if (element.value === '') {\n        // Ignore the debounce time for empty values.\n        commitValidation(element.value);\n        return;\n      }\n      timeout.clear();\n      if (validationDebounceTime) {\n        timeout.start(validationDebounceTime, () => {\n          commitValidation(element.value);\n        });\n      } else {\n        commitValidation(element.value);\n      }\n    }\n  }, getValidationProps(externalProps)), [getValidationProps, clearErrors, name, timeout, commitValidation, invalid, validationMode, validationDebounceTime]);\n  return React.useMemo(() => ({\n    getValidationProps,\n    getInputValidationProps,\n    inputRef,\n    commitValidation\n  }), [getValidationProps, getInputValidationProps, commitValidation]);\n}", "'use client';\n\nimport * as React from 'react';\nimport { NOOP } from \"../utils/noop.js\";\nexport const FormContext = /*#__PURE__*/React.createContext({\n  formRef: {\n    current: {\n      fields: new Map()\n    }\n  },\n  errors: {},\n  clearErrors: NOOP\n});\nif (process.env.NODE_ENV !== \"production\") FormContext.displayName = \"FormContext\";\nexport function useFormContext() {\n  return React.useContext(FormContext);\n}", "export const NOOP = () => {};", "/**\n * Combines the field's client-side, stateful validity data with the external invalid state to\n * determine the field's true validity.\n */\nexport function getCombinedFieldValidityData(validityData, invalid) {\n  return {\n    ...validityData,\n    state: {\n      ...validityData.state,\n      valid: !invalid && validityData.state.valid\n    }\n  };\n}", "import * as ReactDOM from 'react-dom';\nimport { useModernLayoutEffect } from \"../utils/useModernLayoutEffect.js\";\nimport { getCombinedFieldValidityData } from \"./utils/getCombinedFieldValidityData.js\";\nimport { useFormContext } from \"../form/FormContext.js\";\nimport { useFieldRootContext } from \"./root/FieldRootContext.js\";\nimport { useLatestRef } from \"../utils/useLatestRef.js\";\nexport function useField(params) {\n  const {\n    formRef\n  } = useFormContext();\n  const {\n    invalid,\n    markedDirtyRef,\n    validityData,\n    setValidityData\n  } = useFieldRootContext();\n  const {\n    enabled = true,\n    value,\n    id,\n    controlRef,\n    commitValidation\n  } = params;\n  const getValueRef = useLatestRef(params.getValue);\n  useModernLayoutEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    let initialValue = value;\n    if (initialValue === undefined) {\n      initialValue = getValueRef.current?.();\n    }\n    if (validityData.initialValue === null && initialValue !== validityData.initialValue) {\n      setValidityData(prev => ({\n        ...prev,\n        initialValue\n      }));\n    }\n  }, [enabled, setValidityData, value, validityData.initialValue, getValueRef]);\n  useModernLayoutEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    if (id) {\n      formRef.current.fields.set(id, {\n        controlRef,\n        validityData: getCombinedFieldValidityData(validityData, invalid),\n        validate() {\n          let nextValue = value;\n          if (nextValue === undefined) {\n            nextValue = getValueRef.current?.();\n          }\n          markedDirtyRef.current = true;\n          // Synchronously update the validity state so the submit event can be prevented.\n          ReactDOM.flushSync(() => commitValidation(nextValue));\n        }\n      });\n    }\n  }, [commitValidation, controlRef, enabled, formRef, getValueRef, id, invalid, markedDirtyRef, validityData, value]);\n}", "'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { NumberFieldScrubAreaContext } from \"./NumberFieldScrubAreaContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { ownerDocument, ownerWindow } from \"../../utils/owner.js\";\nimport { isWebKit } from \"../../utils/detectBrowser.js\";\nimport { useLatestRef } from \"../../utils/useLatestRef.js\";\nimport { getViewportRect } from \"../utils/getViewportRect.js\";\nimport { subscribeToVisualViewportResize } from \"../utils/subscribeToVisualViewportResize.js\";\nimport { useEventCallback } from \"../../utils/useEventCallback.js\";\nimport { DEFAULT_STEP } from \"../utils/constants.js\";\n\n/**\n * An interactive area where the user can click and drag to change the field value.\n * Renders a `<span>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const NumberFieldScrubArea = /*#__PURE__*/React.forwardRef(function NumberFieldScrubArea(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    direction = 'horizontal',\n    pixelSensitivity = 2,\n    teleportDistance,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const {\n    isScrubbing,\n    setIsScrubbing,\n    disabled,\n    readOnly,\n    value,\n    inputRef,\n    incrementValue,\n    getStepAmount\n  } = useNumberFieldRootContext();\n  const latestValueRef = useLatestRef(value);\n  const scrubAreaRef = React.useRef(null);\n  const isScrubbingRef = React.useRef(false);\n  const scrubAreaCursorRef = React.useRef(null);\n  const virtualCursorCoords = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const visualScaleRef = React.useRef(1);\n  const [isTouchInput, setIsTouchInput] = React.useState(false);\n  const [isPointerLockDenied, setIsPointerLockDenied] = React.useState(false);\n  React.useEffect(() => {\n    if (!isScrubbing || !scrubAreaCursorRef.current) {\n      return undefined;\n    }\n    return subscribeToVisualViewportResize(scrubAreaCursorRef.current, visualScaleRef);\n  }, [isScrubbing]);\n  const updateCursorTransform = useEventCallback((x, y) => {\n    if (scrubAreaCursorRef.current) {\n      scrubAreaCursorRef.current.style.transform = `translate3d(${x}px,${y}px,0) scale(${1 / visualScaleRef.current})`;\n    }\n  });\n  const onScrub = React.useCallback(({\n    movementX,\n    movementY\n  }) => {\n    const virtualCursor = scrubAreaCursorRef.current;\n    const scrubAreaEl = scrubAreaRef.current;\n    if (!virtualCursor || !scrubAreaEl) {\n      return;\n    }\n    const rect = getViewportRect(teleportDistance, scrubAreaEl);\n    const coords = virtualCursorCoords.current;\n    const newCoords = {\n      x: Math.round(coords.x + movementX),\n      y: Math.round(coords.y + movementY)\n    };\n    const cursorWidth = virtualCursor.offsetWidth;\n    const cursorHeight = virtualCursor.offsetHeight;\n    if (newCoords.x + cursorWidth / 2 < rect.x) {\n      newCoords.x = rect.width - cursorWidth / 2;\n    } else if (newCoords.x + cursorWidth / 2 > rect.width) {\n      newCoords.x = rect.x - cursorWidth / 2;\n    }\n    if (newCoords.y + cursorHeight / 2 < rect.y) {\n      newCoords.y = rect.height - cursorHeight / 2;\n    } else if (newCoords.y + cursorHeight / 2 > rect.height) {\n      newCoords.y = rect.y - cursorHeight / 2;\n    }\n    virtualCursorCoords.current = newCoords;\n    updateCursorTransform(newCoords.x, newCoords.y);\n  }, [teleportDistance, updateCursorTransform]);\n  const onScrubbingChange = React.useCallback((scrubbingValue, {\n    clientX,\n    clientY\n  }) => {\n    ReactDOM.flushSync(() => {\n      setIsScrubbing(scrubbingValue);\n    });\n    const virtualCursor = scrubAreaCursorRef.current;\n    if (!virtualCursor || !scrubbingValue) {\n      return;\n    }\n    const initialCoords = {\n      x: clientX - virtualCursor.offsetWidth / 2,\n      y: clientY - virtualCursor.offsetHeight / 2\n    };\n    virtualCursorCoords.current = initialCoords;\n    updateCursorTransform(initialCoords.x, initialCoords.y);\n  }, [setIsScrubbing, updateCursorTransform]);\n  React.useEffect(function registerGlobalScrubbingEventListeners() {\n    if (!inputRef.current || disabled || readOnly) {\n      return undefined;\n    }\n    let cumulativeDelta = 0;\n    function handleScrubPointerUp(event) {\n      try {\n        // Avoid errors in testing environments.\n        ownerDocument(scrubAreaRef.current).exitPointerLock();\n      } catch {\n        //\n      } finally {\n        isScrubbingRef.current = false;\n        onScrubbingChange(false, event);\n      }\n    }\n    function handleScrubPointerMove(event) {\n      if (!isScrubbingRef.current) {\n        return;\n      }\n\n      // Prevent text selection.\n      event.preventDefault();\n      onScrub(event);\n      const {\n        movementX,\n        movementY\n      } = event;\n      cumulativeDelta += direction === 'vertical' ? movementY : movementX;\n      if (Math.abs(cumulativeDelta) >= pixelSensitivity) {\n        cumulativeDelta = 0;\n        const dValue = direction === 'vertical' ? -movementY : movementX;\n        incrementValue(dValue * (getStepAmount(event) ?? DEFAULT_STEP), 1);\n      }\n    }\n    const win = ownerWindow(inputRef.current);\n    win.addEventListener('pointerup', handleScrubPointerUp, true);\n    win.addEventListener('pointermove', handleScrubPointerMove, true);\n    return () => {\n      win.removeEventListener('pointerup', handleScrubPointerUp, true);\n      win.removeEventListener('pointermove', handleScrubPointerMove, true);\n    };\n  }, [disabled, readOnly, incrementValue, latestValueRef, getStepAmount, inputRef, onScrubbingChange, onScrub, direction, pixelSensitivity]);\n\n  // Prevent scrolling using touch input when scrubbing.\n  React.useEffect(function registerScrubberTouchPreventListener() {\n    const element = scrubAreaRef.current;\n    if (!element || disabled || readOnly) {\n      return undefined;\n    }\n    function handleTouchStart(event) {\n      if (event.touches.length === 1) {\n        event.preventDefault();\n      }\n    }\n    element.addEventListener('touchstart', handleTouchStart);\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n    };\n  }, [disabled, readOnly]);\n  const defaultProps = {\n    role: 'presentation',\n    style: {\n      touchAction: 'none',\n      WebkitUserSelect: 'none',\n      userSelect: 'none'\n    },\n    async onPointerDown(event) {\n      const isMainButton = !event.button || event.button === 0;\n      if (event.defaultPrevented || readOnly || !isMainButton || disabled) {\n        return;\n      }\n      const isTouch = event.pointerType === 'touch';\n      setIsTouchInput(isTouch);\n      if (event.pointerType === 'mouse') {\n        event.preventDefault();\n        inputRef.current?.focus();\n      }\n      isScrubbingRef.current = true;\n      onScrubbingChange(true, event.nativeEvent);\n\n      // WebKit causes significant layout shift with the native message, so we can't use it.\n      if (!isTouch && !isWebKit) {\n        try {\n          // Avoid non-deterministic errors in testing environments. This error sometimes\n          // appears:\n          // \"The root document of this element is not valid for pointer lock.\"\n          await ownerDocument(scrubAreaRef.current).body.requestPointerLock();\n          setIsPointerLockDenied(false);\n        } catch (error) {\n          setIsPointerLockDenied(true);\n        } finally {\n          ReactDOM.flushSync(() => {\n            onScrubbingChange(true, event.nativeEvent);\n          });\n        }\n      }\n    }\n  };\n  const element = useRenderElement('span', componentProps, {\n    ref: [forwardedRef, scrubAreaRef],\n    state,\n    props: [defaultProps, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  const contextValue = React.useMemo(() => ({\n    isScrubbing,\n    isTouchInput,\n    isPointerLockDenied,\n    scrubAreaCursorRef,\n    scrubAreaRef,\n    direction,\n    pixelSensitivity,\n    teleportDistance\n  }), [isScrubbing, isTouchInput, isPointerLockDenied, direction, pixelSensitivity, teleportDistance]);\n  return /*#__PURE__*/_jsx(NumberFieldScrubAreaContext.Provider, {\n    value: contextValue,\n    children: element\n  });\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubArea.displayName = \"NumberFieldScrubArea\";", "import * as React from 'react';\nexport const NumberFieldScrubAreaContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubAreaContext.displayName = \"NumberFieldScrubAreaContext\";\nexport function useNumberFieldScrubAreaContext() {\n  const context = React.useContext(NumberFieldScrubAreaContext);\n  if (context === undefined) {\n    throw new Error('Base UI: NumberFieldScrubAreaContext is missing. NumberFieldScrubArea parts must be placed within <NumberField.ScrubArea>.');\n  }\n  return context;\n}", "import { ownerWindow } from \"../../utils/owner.js\";\n\n// Calculates the viewport rect for the virtual cursor.\nexport function getViewportRect(teleportDistance, scrubAreaEl) {\n  const win = ownerWindow(scrubAreaEl);\n  const rect = scrubAreaEl.getBoundingClientRect();\n  if (rect && teleportDistance != null) {\n    return {\n      x: rect.left - teleportDistance / 2,\n      y: rect.top - teleportDistance / 2,\n      width: rect.right + teleportDistance / 2,\n      height: rect.bottom + teleportDistance / 2\n    };\n  }\n  const vV = win.visualViewport;\n  if (vV) {\n    return {\n      x: vV.offsetLeft,\n      y: vV.offsetTop,\n      width: vV.offsetLeft + vV.width,\n      height: vV.offsetTop + vV.height\n    };\n  }\n  return {\n    x: 0,\n    y: 0,\n    width: win.document.documentElement.clientWidth,\n    height: win.document.documentElement.clientHeight\n  };\n}", "import { ownerWindow } from \"../../utils/owner.js\";\n\n// This lets us invert the scale of the cursor to match the OS scale, in which the cursor doesn't\n// scale with the content on pinch-zoom.\nexport function subscribeToVisualViewportResize(element, visualScaleRef) {\n  const vV = ownerWindow(element).visualViewport;\n  if (!vV) {\n    return () => {};\n  }\n  function handleVisualResize() {\n    if (vV) {\n      visualScaleRef.current = vV.scale;\n    }\n  }\n  handleVisualResize();\n  vV.addEventListener('resize', handleVisualResize);\n  return () => {\n    vV.removeEventListener('resize', handleVisualResize);\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { isWebKit } from \"../../utils/detectBrowser.js\";\nimport { ownerDocument } from \"../../utils/owner.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useNumberFieldScrubAreaContext } from \"../scrub-area/NumberFieldScrubAreaContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * A custom element to display instead of the native cursor while using the scrub area.\n * Renders a `<span>` element.\n *\n * This component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\n * in Safari to avoid a layout shift that this notification causes there.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldScrubAreaCursor = /*#__PURE__*/React.forwardRef(function NumberFieldScrubAreaCursor(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const {\n    isScrubbing,\n    isTouchInput,\n    isPointerLockDenied,\n    scrubAreaCursorRef\n  } = useNumberFieldScrubAreaContext();\n  const [domElement, setDomElement] = React.useState(null);\n  const shouldRender = isScrubbing && !isWebKit && !isTouchInput && !isPointerLockDenied;\n  const element = useRenderElement('span', componentProps, {\n    enabled: shouldRender,\n    ref: [forwardedRef, scrubAreaCursorRef, setDomElement],\n    state,\n    props: [{\n      role: 'presentation',\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none'\n      }\n    }, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element && /*#__PURE__*/ReactDOM.createPortal(element, ownerDocument(domElement).body);\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubAreaCursor.displayName = \"NumberFieldScrubAreaCursor\";"],
  "mappings": "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",
  "names": ["React", "React", "FieldControlDataAttributes", "React", "React", "index", "React", "result", "customStyleHookMapping", "_jsx", "React", "React", "React", "React", "EMPTY", "EMPTY", "React", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "focusableCandidateSelector", "candidateSelectors", "concat", "join", "version", "noop", "React", "useInsertionEffect", "React", "React", "import_jsx_runtime", "NumberFieldRoot", "element", "_jsxs", "_jsx", "React", "NumberFieldGroup", "React", "React", "React", "React", "React", "NumberFieldIncrement", "React", "NumberFieldDecrement", "React", "React", "React", "NOOP", "NOOP", "nextValidityData", "NumberFieldInput", "React", "ReactDOM", "React", "import_jsx_runtime", "NumberFieldScrubArea", "element", "_jsx", "React", "ReactDOM", "NumberFieldScrubAreaCursor"]
}
